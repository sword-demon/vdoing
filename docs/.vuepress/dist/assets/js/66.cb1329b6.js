(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{507:function(s,t,n){"use strict";n.r(t);var a=n(16),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"查找"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[s._v("#")]),s._v(" 查找")]),s._v(" "),n("blockquote",[n("p",[s._v("在一些数据元素中，通过一定的方法找出与给定关键字相同的数据元素的过程。")])]),s._v(" "),n("p",[s._v("案例：")]),s._v(" "),n("p",[s._v("列表查找(线性表查找)：从列表中查找指定元素")]),s._v(" "),n("ul",[n("li",[s._v("输入：列表、待查找元素")]),s._v(" "),n("li",[s._v("输出：元素下标(未找到元素时一般返回None或-1)")])]),s._v(" "),n("p",[n("code",[s._v("python")]),s._v("内置列表差汇总啊函数："),n("code",[s._v("index()")])]),s._v(" "),n("h2",{attrs:{id:"顺序查找-linear-search"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顺序查找-linear-search"}},[s._v("#")]),s._v(" 顺序查找 - Linear Search")]),s._v(" "),n("blockquote",[n("p",[s._v("也叫线性查找，从列表第一个元素开始，顺序进行搜索，直到找到元素或搜索到列表最后一个元素为止。")])]),s._v(" "),n("p",[n("code",[s._v("python实现")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf8 -*-")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @Time    : 2021/10/22 22:52")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @Author  : wxvirus")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @File    : search.py")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @Software: PyCharm")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("linear_search")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("enumerate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" v "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ind\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("时间复杂度：")]),s._v(" "),n("p",[s._v("找n，就是列表的长度，有一个和n相关的循环，所以它的世间复杂度为  "),n("code",[s._v("O(n)")])])])}),[],!1,null,null,null);t.default=e.exports}}]);