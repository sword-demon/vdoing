(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{669:function(t,r,e){"use strict";e.r(r);var a=e(16),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"rpc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpc"}},[t._v("#")]),t._v(" RPC")]),t._v(" "),e("h2",{attrs:{id:"什么是-rpc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-rpc"}},[t._v("#")]),t._v(" 什么是 RPC")]),t._v(" "),e("blockquote",[e("p",[t._v("RPC【Remote Procedure Call】是指远程过程调用，是一种进程间通信的方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间(通常是共享网络上的另一台机器上)的过程或函数，而不用程序员显式编程这个远程调用的细节。即程序员无论是调用本地还是远程的函数，本质上编写的调用代码基本相同。")])]),t._v(" "),e("h2",{attrs:{id:"rpc-基本原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpc-基本原理"}},[t._v("#")]),t._v(" RPC 基本原理")]),t._v(" "),e("p",{attrs:{align:"center"}},[e("img",{attrs:{src:"https://gitee.com/wxvirus/img/raw/master/img/20220108134343.png",alt:"rpc原理图"}})]),t._v(" "),e("p",[t._v("即：A 服务器先跟 B 服务器先建立起网络连接，将信息传送给 B 服务器，B 服务器就知道 A 需要调用哪些方法，就调用方法，调用完将返回值通过网络在返回给 A 服务器，A 服务器再接收到具体的返回值信息。")]),t._v(" "),e("ol",[e("li",[t._v("A 和 B 要建立连接，即通信效率")]),t._v(" "),e("li",[t._v("A 和 B 传递数据需要序列化和反序列化")])]),t._v(" "),e("blockquote",[e("p",[t._v("所以，影响一个"),e("code",[t._v("RPC")]),t._v("框架性能的有两点，看一个"),e("code",[t._v("RPC")]),t._v("框架能否快速的在各个服务器之间建立连接，以及序列化和反序列化速度快不快。")])]),t._v(" "),e("p",[t._v("RPC 的框架有很多：")]),t._v(" "),e("ul",[e("li",[t._v("dubbo")]),t._v(" "),e("li",[t._v("gRPC")]),t._v(" "),e("li",[t._v("Thrift")]),t._v(" "),e("li",[t._v("HSF(High Speed Service Framework)")])])])}),[],!1,null,null,null);r.default=v.exports}}]);