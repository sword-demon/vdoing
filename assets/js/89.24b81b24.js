(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{526:function(a,s,t){"use strict";t.r(s);var r=t(16),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"rabbitmq-了解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-了解"}},[a._v("#")]),a._v(" RabbitMQ 了解")]),a._v(" "),t("h2",{attrs:{id:"为啥要用-mq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为啥要用-mq"}},[a._v("#")]),a._v(" 为啥要用 MQ")]),a._v(" "),t("p",[a._v("如果项目就几万条数据。1-2 百并发，就增删改查业务")]),a._v(" "),t("p",[t("strong",[a._v("那么，就不需要 MQ")])]),a._v(" "),t("h2",{attrs:{id:"案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[a._v("#")]),a._v(" 案例")]),a._v(" "),t("p",[a._v("解耦 + 异步")]),a._v(" "),t("p",[a._v("假设有一个用户注册需要以下流程")]),a._v(" "),t("ol",[t("li",[a._v("用户数据入库")]),a._v(" "),t("li",[a._v("发送新人欢迎邮件")]),a._v(" "),t("li",[a._v("赠送新人虚拟币【或积分】")])]),a._v(" "),t("div",{staticClass:"language-mermaid line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-mermaid"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("graph")]),a._v(" TD\n\t入库 "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")]),a._v(" 邮件 "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")]),a._v(" 虚拟币\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("其实只要入库成功就算成功了，下面 2 步完全不需要去等待，如果有 MQ 就可以完成异步。")]),a._v(" "),t("div",{staticClass:"language-mermaid line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-mermaid"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("graph")]),a._v(" TD\n\tA"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(MQ)")]),a._v("\n\tB"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(入库)")]),a._v("\n\tC"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(邮件)")]),a._v("\n\tD"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(虚拟币)")]),a._v("\n\tB "),t("span",{pre:!0,attrs:{class:"token inter-arrow-label"}},[t("span",{pre:!0,attrs:{class:"token arrow-head arrow operator"}},[a._v("--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token label property"}},[a._v("入库成功把user_id发到MQ里")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")])]),a._v(" A\n\tA "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")]),a._v(" C\n\tA "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")]),a._v(" D\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("blockquote",[t("p",[a._v("本质上其实入库完就算成功了，于此同时，会有另外的程序去 MQ 里拿到用户 id 去发送邮件和赠送虚拟币的过程。")]),a._v(" "),t("p",[a._v("所以，基本只有有异步操作，就可以使用 MQ")])]),a._v(" "),t("h2",{attrs:{id:"抗压"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抗压"}},[a._v("#")]),a._v(" 抗压")]),a._v(" "),t("p",[a._v("下订单功能，压力大了之后，对应的下单 API 可能就扛不住了，这个时候可以整一个负载均衡，再假如负载均衡也出现问题，还是会出现压力，然后其实我们可以在一定程度上，可以把下单直接扔给"),t("code",[a._v("MQ集群")]),a._v("，最后可以由下单接口消费者慢慢去处理。")]),a._v(" "),t("div",{staticClass:"language-mermaid line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-mermaid"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("graph")]),a._v(" LR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tA"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(高并发下单)")]),a._v("\n\tB"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(下订单API 1)")]),a._v("\n\tC"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(下订单API 2)")]),a._v("\n\tD"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(下订单API 3)")]),a._v("\n\tF"),t("span",{pre:!0,attrs:{class:"token text string"}},[a._v("(MQ集群)")]),a._v("\n\tA "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")]),a._v(" F\n\tF "),t("span",{pre:!0,attrs:{class:"token inter-arrow-label"}},[t("span",{pre:!0,attrs:{class:"token arrow-head arrow operator"}},[a._v("--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token label property"}},[a._v("慢慢消费")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")])]),a._v(" B\n\tF "),t("span",{pre:!0,attrs:{class:"token inter-arrow-label"}},[t("span",{pre:!0,attrs:{class:"token arrow-head arrow operator"}},[a._v("--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token label property"}},[a._v("慢慢消费")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")])]),a._v(" C\n\tF "),t("span",{pre:!0,attrs:{class:"token inter-arrow-label"}},[t("span",{pre:!0,attrs:{class:"token arrow-head arrow operator"}},[a._v("--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token label property"}},[a._v("慢慢消费")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token arrow operator"}},[a._v("--\x3e")])]),a._v(" D\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br")])]),t("h2",{attrs:{id:"知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[a._v("#")]),a._v(" 知识点")]),a._v(" "),t("ol",[t("li",[a._v("就像 HTTP 协议(应用层)一样，浏览器不可能直接裸奔在 TCP 上，所以必须有一个 HTTP 协议来进行互相识别")]),a._v(" "),t("li",[a._v("MQ 也有协议：如"),t("code",[a._v("AMQP")]),a._v("，也属于应用层协议")]),a._v(" "),t("li",[a._v("浏览器("),t("code",[a._v("web")]),a._v("服务软件)等都是"),t("code",[a._v("HTTP")]),a._v("协议的实现者，那么"),t("code",[a._v("RabbitMQ")]),a._v("是"),t("code",[a._v("AMQP")]),a._v("的实现者(由"),t("code",[a._v("erlang")]),a._v("编写)")])])])}),[],!1,null,null,null);s.default=e.exports}}]);