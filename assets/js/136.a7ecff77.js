(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{577:function(t,a,r){"use strict";r.r(a);var e=r(16),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"consul-集群角色选举-raft-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#consul-集群角色选举-raft-算法"}},[t._v("#")]),t._v(" consul 集群角色选举 Raft 算法")]),t._v(" "),r("h2",{attrs:{id:"raft-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#raft-算法"}},[t._v("#")]),t._v(" Raft 算法")]),t._v(" "),r("ul",[r("li",[t._v("解决了分布式中领导选举和一致性问题")]),t._v(" "),r("li",[t._v("比较出名的共识算法，比如"),r("code",[t._v("redis")]),t._v("哨兵模式和"),r("code",[t._v("consul")])])]),t._v(" "),r("h3",{attrs:{id:"重要因素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重要因素"}},[t._v("#")]),t._v(" 重要因素")]),t._v(" "),r("ul",[r("li",[t._v("任期机制，"),r("code",[t._v("raft")]),t._v("是终身任期的，只要服务没有问题，被选择的领导者节点一直都是领导者")]),t._v(" "),r("li",[t._v("心跳机制，它决定领导者是否能有效的和跟随者通信")]),t._v(" "),r("li",[t._v("随机的选举超时时间")]),t._v(" "),r("li",[t._v("先到先得")]),t._v(" "),r("li",[t._v("过半投票机制，收到过半的投票才能算领导者")])]),t._v(" "),r("h3",{attrs:{id:"角色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#角色"}},[t._v("#")]),t._v(" 角色")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("Follower")]),t._v("追随者，接受领导者发送的消息，当心跳超时时，主动推荐自己为候选人")]),t._v(" "),r("li",[r("code",[t._v("Candidate")]),t._v("候选人，发送"),r("code",[t._v("rpc")]),t._v("消息，让其他节点投票给自己，票数过半时，成为领导者")]),t._v(" "),r("li",[r("code",[t._v("Leader")]),t._v("领导者，向其他节点发送心跳，只要心跳不超时一直为领导者")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://raft.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("raft 官网地址"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("这里有一个动画，可以帮助我们进行理解。")])])}),[],!1,null,null,null);a.default=_.exports}}]);